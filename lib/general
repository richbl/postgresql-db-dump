#!/bin/bash
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

# -----------------------------------------------------------------------------
# Copyright (C) Business Learning Incorporated (businesslearninginc.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License at <http://www.gnu.org/licenses/> for
# more details.
# -----------------------------------------------------------------------------
#
# bash library for general-purpose script processing
# version: 0.6.1
#

# -----------------------------------------------------------------------------
# check program dependencies
#
function check_program_dependencies {

  local -a DEPS=("${!1}")

  for i in "${DEPS[@]}"; do
    if ! type $i &>/dev/null; then
      printf "\n%s\n" "Error: program $i not installed."
      quit 1
    fi
  done

}

# -----------------------------------------------------------------------------
# check file dependencies
#
function check_file_dependencies {

  local -a DEPS=("${!1}")
  for i in "${DEPS[@]}"; do
    if [ ! -f $i &>/dev/null ]; then
      printf "\n%s\n" "Error: file $i not found."
      quit 1
    fi
  done

}

# -----------------------------------------------------------------------------
# display script banner
#
function display_banner {

  printf "%s\n"
  printf "%s\n" " |"
  printf "%s\n" " |  $(get_config_details title)"
  printf "%s\n" " |    $(get_config_details version)"
  printf "%s\n" " |"
  printf "%s\n" " |  Usage:"
  printf "%s\n" " |    $(get_config_details syntax)"
  printf "%s\n" " |"

  local MAX_COL=0
  local COUNT_ARGS=$(get_config_args_length)

  # determine maximum column width for setting output columns
  #
  for ((j=0;j<COUNT_ARGS;j++)) do
    ARG_LEN=$(get_config_arg $j short_form)+$(get_config_arg $j long_form)
    ((${#ARG_LEN} > MAX_COL)) && MAX_COL=${#ARG_LEN}
    (($j == COUNT_ARGS-1 )) && ((MAX_COL+=6))
  done

  for ((j=0;j<COUNT_ARGS;j++)) do
    printf "%-${MAX_COL}s %s\n" " |  $(get_config_arg $j short_form), $(get_config_arg $j long_form)" "$(get_config_arg $j description)"
  done

  printf "%s\n\n" " |"

}

# -----------------------------------------------------------------------------
# exit wrapper
#
function quit {

  local RES=("${1}")

  printf "%s\n"
  exit "${RES}"

}
